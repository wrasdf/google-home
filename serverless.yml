
service: google-home

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: ap-southeast-2
  timeout: 20
  environment:
    KMS_API_KEY: AQECAHiySmq4Xv2lZxcAr7h0LYl2GRAbMd/pSDKE2bIqg0lTDwAAAG8wbQYJKoZIhvcNAQcGoGAwXgIBADBZBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDEPZhfSFdVTtPFqZRgIBEIAs0YLEvmIt7w/Lx53W9A8FLKjPUSx38admr5FNHqj70Y1vFjAUJ6vdOv6oqZ8
    KMS_APPLICATION_KEY: AQECAHiySmq4Xv2lZxcAr7h0LYl2GRAbMd/pSDKE2bIqg0lTDwAAAG8wbQYJKoZIhvcNAQcGoGAwXgIBADBZBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDEPZhfSFdVTtPFqZRgIBEIAs0YLEvmIt7w/Lx53W9A8FLKjPUSx38admr5FNHqj70Y1vFjAUJ6vdOv6oqZ8

  iamRoleStatements:
   - Effect: "Allow"
     Action:
       - "kms:Decrypt"
     Resource: "arn:aws:kms:ap-southeast-2:693429498512:key/ff466877-f228-44e4-b0a1-1bb58f2202a5"

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  echo:
    handler: handler.echo
    events:
    - http:
       path: api/echo
       method: post
       integration: lambda
       cors: true


#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
